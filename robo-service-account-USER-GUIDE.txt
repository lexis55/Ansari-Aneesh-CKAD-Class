RBAC for system users or bots

1. create service account first in master node

kubectl create serviceaccount robo 


2. create pod using robo service accout and install kubectl inside that pod 


Create a new pod with service account robo as following YAML

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: myapp
  name: robo-pod
spec:
  serviceAccount: robo
  containers:
  - image: nginx:latest
    name: con1
    ports:
    - containerPort: 80


## Install kubectl inside this pod 
curl -LO https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubectl

#make it executable
chmod +x kubectl   
# move kubectl to global location
mv kubectl /usr/bin/


Error from server (Forbidden): pods is forbidden: User "system:serviceaccount:default:default" cannot list resource "pods" 
in API group "" in the namespace "default"




Now create role and role binding for service account robo

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: robo-role
  namespace: devops
rules:
  - apiGroups: [ "*" ]
    resources: [ "pods/exec","pods","deployments" ]
    verbs: [ "get", "list","edit","create","update","delete"  ]

##### role binding.yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: robo-rolebinding
  namespace: devops
subjects:
- kind: ServiceAccount
  name: robo
  namespace: default
roleRef:
  kind: Role
  name: robo-role
  apiGroup: rbac.authorization.k8s.io




